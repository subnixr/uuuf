{"version":3,"file":"uuuf.js","mappings":"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","sources":["webpack://uuuf/webpack/universalModuleDefinition","webpack://uuuf/webpack/bootstrap","webpack://uuuf/webpack/runtime/define property getters","webpack://uuuf/webpack/runtime/hasOwnProperty shorthand","webpack://uuuf/webpack/runtime/make namespace object","webpack://uuuf/./src/utils.ts","webpack://uuuf/./src/objtree.ts","webpack://uuuf/./src/dom.ts","webpack://uuuf/./src/css.ts","webpack://uuuf/./src/events.ts","webpack://uuuf/./src/Component.ts","webpack://uuuf/./node_modules/auto-bind/index.js","webpack://uuuf/./src/loadComponents.ts"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"uuuf\"] = factory();\n\telse\n\t\troot[\"uuuf\"] = factory();\n})(self, () => {\nreturn ","// The require scope\nvar __webpack_require__ = {};\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// Checks if the value is not undefined and not null\n// Ergonomic shortcut for Object.entries(...).reduce(...)\nexport function reduceObject<A, B>(\n    obj: { [key: string]: A },\n    init: any,\n    f: (acc: B, v: A, k: string) => B\n): B {\n    return Object.entries(obj).reduce((acc, [k, v]) => {\n        return f(acc, v, k);\n    }, init);\n}\n","import { reduceObject } from \"./utils\";\n\nexport interface ObjectTree<A> {\n    [key: string]: ObjectTree<A> | A\n}\n\nfunction defined(v: any): boolean {\n    return typeof v !== 'undefined' && v !== null;\n}\n\n// Walk to a specific node in the tree\nexport function get<A>(\n    tree: ObjectTree<A>,\n    path: string | string[],\n): ObjectTree<A> | A | undefined {\n    let ks: Array<string>;\n    if (typeof path === 'string') ks = path.split('.');\n    else ks = [...path];\n\n    const res = ks.reduce((r, k) => !defined(r) ? r : r[k], tree);\n    return res === null ? undefined : res;\n};\n\ntype ObjtreeMapFn<A, B> = (v: A, ks: string[], k: string) => B;\n\nfunction innerMap<A, B>(\n    tree: ObjectTree<A>,\n    f: ObjtreeMapFn<A, B>,\n    ks: string[] = []\n): ObjectTree<B> {\n    return reduceObject(tree as { [key: string]: A}, {}, (acc, v, k) => {\n        if (defined(v) && v.constructor === Object) {\n            return { ...acc, [k]: innerMap(v as ObjectTree<A>, f, [...ks, k]) };\n        }\n        const nextv = f(v, [...ks, k], k);\n        if (typeof nextv === 'undefined') return { ...acc };\n        return { ...acc, [k]: nextv };\n    });\n}\n\n// Maps function to tree leaves\nexport function map<A, B>(\n    tree: ObjectTree<A>,\n    f: ObjtreeMapFn<A, B>\n): ObjectTree<B> {\n    return innerMap(tree, f);\n}\n","import * as objtree from './objtree';\nimport { ObjectTree } from './objtree';\n\ntype QueryPredicate = string | ((e: HTMLElement) => boolean);\n\n// traverses dom tree returning a list of matched elements by `predicate`,\n// without descending further into matches.\nexport function query(\n    root: HTMLElement | HTMLElement[],\n    predicate: QueryPredicate\n): HTMLElement[] {\n    let p: (elem: HTMLElement) => boolean;\n    if (typeof predicate === 'function') p = predicate;\n    else p = elem => elem.matches(predicate);\n\n    function findMatches(elem: HTMLElement): HTMLElement[] {\n        if (p(elem)) return [elem];\n        return Array.from(elem.children).map(findMatches).flat();\n    };\n    if (!Array.isArray(root)) root = [root];\n    return Array.from(root).map(findMatches).flat();\n}\n\nenum SelectorType {\n    All = 'all',\n    Query = 'query',\n}\n\nexport type QuerySelector = string | { type: SelectorType, toString(): string };\n\nfunction selector(\n    type: SelectorType,\n    strings: string[],\n    ...values: any[]\n): QuerySelector {\n    const query = strings[0] + strings.slice(1).map((s, i) => values[i] + s);\n\n    // cirumvent objtree.map object detection with hidden props\n    return Object.create(null, {\n        toString: { value: () => query },\n        type: { value: type },\n    });\n}\n\nexport type SelectorMaker = (string: string[], ...value: any[]) => QuerySelector;\n\nexport function $$(strings: string[], ...values: any[]): QuerySelector {\n    return selector(SelectorType.Query, strings, ...values);\n}\n\nexport function $ALL(strings: string[], ...values: any[]): QuerySelector {\n    return selector(SelectorType.All, strings, ...values);\n}\n\nexport type QueryResult = Element | HTMLElement | HTMLElement[];\n\n// Query DOM from `elem`, returning map of results\nexport function querySelect(\n    elem: HTMLElement,\n    selectorMap: ObjectTree<QuerySelector>\n): ObjectTree<QueryResult> {\n    return objtree.map(selectorMap, selector => {\n        if (typeof selector === 'string') return elem.querySelector(selector);\n        if (selector.type === SelectorType.Query) return query(elem, selector.toString());\n        if (selector.type === SelectorType.All) return Array.from(elem.querySelectorAll(selector.toString()));\n    });\n}\n","import * as objtree from './objtree';\nimport { ObjectTree } from './objtree';\n\nexport interface CSSClass {\n    (elem: HTMLElement, toggle?: boolean): boolean,\n    match(elem: HTMLElement): boolean,\n    toString(): string,\n}\n\n// Builds a convenient function to apply and test css classes to elements\nexport function cssClass(className: string): CSSClass {\n    const toggleFn = (elem: HTMLElement, toggle = true) => elem.classList.toggle(className, toggle);\n    toggleFn.match = (elem: HTMLElement) => elem.classList.contains(className);\n    toggleFn.toString = () => className;\n    return toggleFn;\n}\n\n// Builds a convenient function to apply css classes to elements\nexport function cssClassNames(\n    classNameMap: ObjectTree<string>\n): ObjectTree<CSSClass> {\n    return objtree.map(classNameMap, cssClass);\n}\n","import { reduceObject } from './utils';\nimport * as objtree from './objtree';\nimport { ObjectTree} from './objtree';\nimport { QueryResult } from './dom';\n\nexport type Handler = (evt: Event) => void\nexport type HandlerMap = { [event: string]: Handler }\n\nexport type RemovableHandler = { (): Handler, remove(): void }\nexport type RemovableHandlerMap = { [event: string]: RemovableHandler }\n\n// Emit custom events from target element\nexport function emit(\n    elem: HTMLElement,\n    name: string,\n    detail: any,\n    bubbles = true\n): void {\n    const evt = new CustomEvent(name, { bubbles, detail });\n    elem.dispatchEvent(evt);\n}\n\nfunction withRemove(fn: Function, remove = () => {}): RemovableHandler {\n    // cleanest known way to clone a function\n    // it's acceptable because `get DOM()` only uses arrow function or bound methods\n    const cloned = fn.bind(null);\n    cloned.remove = remove;\n    return cloned;\n}\n\nfunction makeRemovableHandler(\n    elem: QueryResult,\n    eventName: string,\n    handler: Handler,\n): RemovableHandler {\n    if (Array.isArray(elem)) {\n        elem.forEach(e => e.addEventListener(eventName, handler));\n        return withRemove(handler, () => {\n            elem.forEach(e => e.removeEventListener(eventName, handler));\n        });\n    }\n\n    elem.addEventListener(eventName, handler);\n    return withRemove(handler, () => {\n        elem.removeEventListener(eventName, handler);\n    });\n}\n\n// Adds event listeners to elements\nexport function bind(\n    elemTree: ObjectTree<QueryResult>,\n    handlerTree: ObjectTree<HandlerMap>\n): ObjectTree<RemovableHandlerMap> {\n    return objtree.map(elemTree, (elem, ks) => {\n        const hm = objtree.get<HandlerMap>(handlerTree, ks);\n        if (!hm) return;\n        return reduceObject(hm as { [key: string]: Handler}, {}, (\n            ht: ObjectTree<RemovableHandlerMap>,\n            handler: Handler,\n            eventName: string,\n        ) => {\n            const rh = makeRemovableHandler(elem, eventName, handler);\n            return { ...ht, [eventName]: rh }\n        }) as RemovableHandlerMap;\n    });\n}\n\n// Removes event listeners to elements\nexport function unbind(handlerMap: ObjectTree<RemovableHandlerMap>) {\n    objtree.map(handlerMap, handler => {\n        handler.remove();\n    });\n}\n","import { querySelect, QueryResult, QuerySelector } from './dom';\nimport { CSSClass, cssClassNames } from './css';\nimport * as objtree from './objtree';\nimport { ObjectTree } from './objtree';\nimport { bind, unbind, emit, RemovableHandlerMap, HandlerMap } from './events';\n\nimport autoBind from 'auto-bind';\n\nexport type HTMLElementComponent = HTMLElement & { component: typeof Component };\n\nexport type DOMDefinition = QuerySelector | [QuerySelector, HandlerMap | undefined];\n\nexport class Component {\n    elem: HTMLElementComponent;\n    args: { [key: string]: any };\n    css: ObjectTree<CSSClass>;\n    dom: ObjectTree<QueryResult>;\n    _handlers: ObjectTree<RemovableHandlerMap>;\n\n    // Declarations\n    get CSS(): ObjectTree<string> {\n        return {\n            /*\n            myClass: 'my-class',\n            */\n        };\n    }\n\n    get DOM(): ObjectTree<DOMDefinition> {\n        return {\n            /*\n            myElement: '[data-my-element]',\n            myElement: ['[data-my-element]', {\n                click: () => console.log(\"hello, world!\"),\n            }],\n            myGroup: {\n                mySubGroup: {\n                    elem1: '[data-elem-1]',\n                    elem2: ['[data-elem-2]', {\n                        click: () => console.log(\"hello, world!\"),\n                    }]\n                }\n            },\n            */\n        };\n    }\n\n    // Component lifecycle\n    constructor(elem: HTMLElement) {\n        this.elem = elem as HTMLElementComponent;\n        this.args = JSON.parse(elem.dataset.args || '{}');\n\n        Object.defineProperties(this, {\n            _handlers: { enumerable: false, writable: true, value: {} },\n        });\n\n        this.css = cssClassNames(this.CSS);\n\n        autoBind(this); // automatic this.method = this.method.bind(this);\n    }\n\n    // called after all components are loaded\n    // should be overloaded rather than extended\n    async ready() {\n        this.bind();\n    }\n\n\n    // Methods\n    select() {\n        const domMapping = objtree.map(this.DOM, v => {\n            return Array.isArray(v) ? v[0] : v;\n        });\n        this.dom = querySelect(this.elem, domMapping);\n    }\n\n    bind() {\n        this.select();\n        this.unbind();\n        const handlersMapping = objtree.map(this.DOM, v => {\n            return Array.isArray(v) ? v[1] : undefined;\n        });\n        console.log(handlersMapping)\n        this._handlers = bind(this.dom, handlersMapping);\n    }\n\n    unbind() {\n        unbind(this._handlers);\n    }\n\n    emit(name: string, detail: any, bubbles = true) {\n        emit(this.elem, name, detail, bubbles);\n    }\n\n    async mix(component: typeof Component, elem = this.elem): Promise<Component> {\n        const instance = new component(elem);\n        await instance.ready();\n        return instance;\n    }\n\n    is(e: any): boolean {\n        return e === this.elem;\n    }\n}\n","// Gets all non-builtin properties up the prototype chain.\nconst getAllProperties = object => {\n\tconst properties = new Set();\n\n\tdo {\n\t\tfor (const key of Reflect.ownKeys(object)) {\n\t\t\tproperties.add([object, key]);\n\t\t}\n\t} while ((object = Reflect.getPrototypeOf(object)) && object !== Object.prototype);\n\n\treturn properties;\n};\n\nexport default function autoBind(self, {include, exclude} = {}) {\n\tconst filter = key => {\n\t\tconst match = pattern => typeof pattern === 'string' ? key === pattern : pattern.test(key);\n\n\t\tif (include) {\n\t\t\treturn include.some(match); // eslint-disable-line unicorn/no-array-callback-reference\n\t\t}\n\n\t\tif (exclude) {\n\t\t\treturn !exclude.some(match); // eslint-disable-line unicorn/no-array-callback-reference\n\t\t}\n\n\t\treturn true;\n\t};\n\n\tfor (const [object, key] of getAllProperties(self.constructor.prototype)) {\n\t\tif (key === 'constructor' || !filter(key)) {\n\t\t\tcontinue;\n\t\t}\n\n\t\tconst descriptor = Reflect.getOwnPropertyDescriptor(object, key);\n\t\tif (descriptor && typeof descriptor.value === 'function') {\n\t\t\tself[key] = self[key].bind(self);\n\t\t}\n\t}\n\n\treturn self;\n}\n","import { Component } from './Component';\nimport { query } from './dom';\n\nexport type LoadComponentsFn = (\n    root: HTMLElement | HTMLElement[] | HTMLCollection,\n    extraPredicate: ((elem: HTMLElement) => boolean)\n) => Promise<void>\n\nexport interface MakeLoadComponentsOptions {\n    componentSelector?: (string),\n    getComponentName?: (elem: HTMLElement) => string,\n}\n\nconst DEFAULT = {\n    componentSelector: '[data-js-component]',\n    getComponentName: (elem: HTMLElement): string => elem.dataset.jsComponent,\n    // eslint-disable-next-line no-unused-vars\n    importComponent: async (compName: string): Promise<typeof Component> => {\n        throw new Error(`importComponent is not implemented`);\n    },\n};\n\nexport function makeLoadComponents(\n  importComponent: (componentName: string) => Promise<typeof Component>,\n  { componentSelector, getComponentName }: MakeLoadComponentsOptions = {}\n): LoadComponentsFn {\n    if (typeof importComponent !== 'function') throw new Error(`importComponent must be a function`);\n\n    if (typeof componentSelector === 'undefined') componentSelector = DEFAULT.componentSelector\n    if (typeof getComponentName === 'undefined') getComponentName = DEFAULT.getComponentName\n\n    function isComponent(e: HTMLElement): boolean {\n        return e.matches(componentSelector) && Boolean(getComponentName(e));\n    }\n\n    function isNotLoaded(e: HTMLElement & { component?: typeof Component}): boolean {\n        return !e.component;\n    }\n\n    return async function loadComponents(\n        root: HTMLElement | HTMLElement[] | HTMLCollection,\n        extraPredicate: ((elem: HTMLElement) => boolean) = () => true\n    ): Promise<void> {\n        let r: HTMLElement[];\n        if (root instanceof HTMLCollection) r = Array.from(root) as HTMLElement[];\n        if (root instanceof HTMLElement) r = [root] as HTMLElement[];\n        else r = root as HTMLElement[];\n\n        const predicate = (e: HTMLElement): boolean => {\n            return isComponent(e) && isNotLoaded(e) && extraPredicate(e);\n        };\n\n        const comps: Promise<Component>[] = query(r, predicate).map(async el => {\n            const compName = getComponentName(el);\n            const comp = await importComponent(compName);\n            return new (comp as typeof Component)(el);\n        });\n\n        return Promise.all(comps).then(async cs => {\n            for (const c of cs) {\n                Object.defineProperty(c.elem, 'component', {\n                    configurable: true,\n                    writable: false,\n                    enumerable: false,\n                    value: c,\n                })\n                await c.ready();\n            }\n        });\n    };\n}"],"names":["root","factory","exports","module","define","amd","self","__webpack_require__","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","Symbol","toStringTag","value","reduceObject","init","f","entries","reduce","acc","k","v","defined","tree","path","res","split","r","undefined","innerMap","ks","constructor","nextv","map","SelectorType","query","predicate","p","elem","matches","Array","isArray","from","findMatches","children","flat","selector","type","strings","slice","s","i","values","create","toString","$$","Query","$ALL","All","querySelect","selectorMap","querySelector","querySelectorAll","cssClass","className","toggleFn","toggle","classList","match","contains","cssClassNames","classNameMap","emit","name","detail","bubbles","evt","CustomEvent","dispatchEvent","withRemove","fn","remove","cloned","bind","elemTree","handlerTree","hm","ht","handler","eventName","rh","forEach","e","addEventListener","removeEventListener","makeRemovableHandler","unbind","handlerMap","this","args","JSON","parse","dataset","defineProperties","_handlers","writable","css","CSS","include","exclude","filter","pattern","test","some","object","properties","Set","Reflect","ownKeys","add","getPrototypeOf","getAllProperties","descriptor","getOwnPropertyDescriptor","autoBind","ready","select","domMapping","DOM","dom","handlersMapping","console","log","mix","component","instance","is","DEFAULT","jsComponent","makeLoadComponents","importComponent","componentSelector","getComponentName","Error","extraPredicate","HTMLCollection","HTMLElement","comps","Boolean","isComponent","isNotLoaded","el","compName","Promise","all","then","cs","c","configurable"],"sourceRoot":""}